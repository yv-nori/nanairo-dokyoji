.C_shabon {
  // アニメーション
  $shabon-duration-roll: 3.5s;
  $shabon-duration-hori: 7.0s;
  $shabon-duration-ver: 6.0s;
  $shabon-duration-span: 0.25s;
  $shabon-rotate-deg: 15deg;
  $shabon-rotate-scale: 0.9;
  $shabon-move-distance: 0.8vw;
  @for $i from 0 through 2 {
    $shabon-duration-roll: $shabon-duration-roll + $shabon-duration-span * $i;
    $shabon-duration-hori: $shabon-duration-hori + $shabon-duration-span * $i;
    $shabon-duration-ver: $shabon-duration-ver + $shabon-duration-span * $i;
    @for $ii from 1 through 2 {
      $name: "A";
      $direction: 1;
      @if $ii == 1 {
        $name: "A";
        $direction: 1;
      }
      @else {
        $name: "B";
        $direction: -1;
      }
      @include keyframes(Shabon-roll#{$name}) {
        0% {
          transform:
          rotateZ($direction * $shabon-rotate-deg)
          scale($shabon-rotate-scale);
        }
        50% {
          transform: 
          rotateZ(-1 * $direction * $shabon-rotate-deg)
          scale(1.0);
        }
        100% {
          transform:
          rotateZ($direction * $shabon-rotate-deg)
          scale($shabon-rotate-scale);
        }
      }
      &-roll-#{$i + 1}#{$name} {
        @include animation(Shabon-roll#{$name} $shabon-duration-roll ease-in-out infinite);
        width: 100%;
        height: 100%;
      }
      @include keyframes(Shabon-hori#{$name}) {
        0% {
          transform:
          translate3d(0, -1 * $direction * $shabon-move-distance, 0);
        }
        50% {
          transform: 
          translate3d(0 , $direction * $shabon-move-distance, 0);
        }
        100% {
          transform:
          translate3d(0 , -1 * $direction * $shabon-move-distance, 0);
        }
      }
      &-hori-#{$i + 1}#{$name} {
        @include animation(Shabon-hori#{$name} $shabon-duration-hori ease-in-out infinite alternate);
        width:100%;
        height: 100%;
      }
      @include keyframes(Shabon-ver#{$name}) {
        0% {
          transform:
          translate3d($direction * $shabon-move-distance, 0, 0);
        }
        50% {
          transform: 
          translate3d(-1 * $direction * $shabon-move-distance, 0, 0);
        }
        100% {
          transform:
          translate3d($direction * $shabon-move-distance, 0, 0);
        }
      }
      &-ver-#{$i + 1}#{$name} {
        @include animation(Shabon-ver#{$name} $shabon-duration-ver ease-in-out infinite alternate);
        width: 100%;
        height: 100%;
      }
    }
  }
  // イメージ
  &-left {
    @include image;
    background: image-url('deco/shabon/shabon-left.png') no-repeat center center / cover;
  }
  &-right {
    @include image;
    background: image-url('deco/shabon/shabon-right.png') no-repeat center center / cover;
  }
  // サイズ
  &-SSS {
    width: $deco-width * 0.4;
    height: $deco-height * 0.4;
    z-index: map-get($layer, 'icon');
  }
  &-SS {
    width: $deco-width * 0.6;
    height: $deco-height * 0.6;
    z-index: map-get($layer, 'icon');
  }
  &-S {
    width: $deco-width * 0.8;
    height: $deco-height * 0.8;
    z-index: map-get($layer, 'icon');
  }
  &-M {
    width: $deco-width;
    height: $deco-height;
    z-index: map-get($layer, 'icon');
  }
  &-L {
    width: $deco-width * 1.2;
    height: $deco-height * 1.2;
    z-index: map-get($layer, 'icon');
  }
  &-LL {
    width: $deco-width * 1.4;
    height: $deco-height * 1.4;
    z-index: map-get($layer, 'icon');
  }
  &-LLL {
    width: $deco-width * 1.6;
    height: $deco-height * 1.6;
    z-index: map-get($layer, 'icon');
  }
  &-LLLL {
    width: $deco-width * 1.8;
    height: $deco-height * 1.8;
    z-index: map-get($layer, 'icon');
  }
}
